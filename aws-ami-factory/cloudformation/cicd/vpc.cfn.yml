Parameters:

  AccountName:
    Description: Name of the Account
    Type: String
  AccountCode:
    Description: Code of the Account
    Type: String
  RegionCode:
    Description: Code of the Region
    Type: String
  Application:
    Description: Name of the Application
    Type: String
  VpcCidr:
    Description: VPC CIDR
    Type: String
  PublicSubnetCidrAz1:
    Description: Public Subnet CIDR AZ A
    Type: String
  PublicSubnetCidrAz2:
    Description: Public Subnet CIDR AZ B
    Type: String
  PrivateSubnetCidrAz1:
    Description: Private Subnet CIDR AZ A
    Type: String
  PrivateSubnetCidrAz2:
    Description: Private Subnet CIDR AZ B
    Type: String
  SsmVpcIdKey:
    Type: String
  SsmPublicSubnetsKey:
    Type: String
  SsmPrivateSubnetsKey:
    Type: String

Resources:

  #================
  # VPC
  #================

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-vpc

  #================
  # Subnets
  #================

  PublicSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnetCidrAz1
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-public-1a

  PublicSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnetCidrAz2
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-public-1b

  PrivateSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnetCidrAz1
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-private-1a

  PrivateSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnetCidrAz2
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-private-1b

  #=================
  # Internet Gateway
  #=================

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-public-az

  RouteInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  # SubnetRouteTableAssociation (public only here)

  PublicSubnetAz1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAz1

  PublicSubnetAz2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAz2

  #================
  # NAT Gateway
  #================

  PublicSubnetAz1NATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

# -- NAT in web-public

  PublicSubnetAz1NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt PublicSubnetAz1NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnetAz1
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-public-1a

# RouteTable

# -- private-rt

  PrivateSubnetAz1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-private-1a

  PrivateSubnetAz2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${AccountCode}-${RegionCode}-${Application}-private-1b

  # SubnetRouteTableAssociation

  PrivateSubnetAz1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetAz1RouteTable
      SubnetId: !Ref PrivateSubnetAz1

  PrivateSubnetAz2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetAz2RouteTable
      SubnetId: !Ref PrivateSubnetAz2

# Route to NAT

  PrivateSubnetAz1Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnetAz1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicSubnetAz1NatGateway

  PrivateSubnetAz2Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnetAz2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicSubnetAz1NatGateway

  #================
  # SSM Parameters
  #================

  SsmVpiId:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Ref SsmVpcIdKey
      Value: !Ref Vpc

  SsmPublicSubnetsId:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Ref SsmPublicSubnetsKey
      Value: !Join [ ',', [ !Ref PublicSubnetAz1, !Ref PublicSubnetAz2 ] ]

  SsmPrivateSubnetsId:
    Type: AWS::SSM::Parameter
    Properties:
      Type: StringList
      Name: !Ref SsmPrivateSubnetsKey
      Value: !Join [ ',', [ !Ref PrivateSubnetAz1, !Ref PrivateSubnetAz2 ] ]
